/// order agnostic -binary search in golang
///  for order agnostic array means confirm nhi hai ham decending array dege binary search ko ya accending order array. that's why hamne yaha donoke hisab se func me code likha hai.
/// for sorted array
/// both for postive and nagitave values

package main

import (
	"fmt"
)

func main() {
	// note -> yaha ager app acending array ko use kare to decending array ko comment out kar de nhi to ye error dega. ek array ko use kare ko dusre ko commment out karde

	//var acendingArr = []int{-6, -2, -1, 0, 3, 5, 8, 10, 15, 20, 25}
	var decendingArr = []int{30, 25, 20, 15, 10, 5, 0, -1, -2, -5, -6}
	var tar = 5

	ans := OrderAgnosticBinarySearch(decendingArr, tar)
	fmt.Println(ans)
}

func OrderAgnosticBinarySearch(arr []int, tar int) int {

	start := 0
	end := len(arr) - 1
  
  // ager isAcen hoga to start end se hamesha chota hi hoga.like this ->[1,2,3,4,5]
	isAcen := arr[start] < arr[end]
  // ager isDec hoga to start hamesa bada ho end se like this ->[5,4,3,2,1]
	isDec := arr[start] > arr[end]

	for start <= end {

		mid := (start + end) / 2

		if isAcen {

			if tar < arr[mid] {
				end = mid - 1
			} else if tar > arr[mid] {
				start = mid + 1
			} else {
				return mid
			}
		} else {
			if isDec {
				if tar < arr[mid] {
					start = mid + 1
				} else if tar > arr[mid] {
					end = mid - 1
				} else {
					return mid
				}
			}
		}

	}
	return -1

}
